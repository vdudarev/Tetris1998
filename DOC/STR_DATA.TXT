                            2.2. СТРУРТУРА ДАННЫХ.

                         2.2.1. Глобальные переменные.

   Все глобальные переменные объявлены в модуле Data.pas.
Идентификаторы и назначение переменных:

TripFont, BoldFont: Integer;
   Переменные, указывающие на номера регистрируемых шрифтов.
P: Pointer;
   Служебный указатель, используемый для сохранения области экрана.
Ch: Char;
   Переменная, в которую считываются коды нажатых клавиш.
Rec: Records;
   Переменная, содержащая лучшие результаты и текст победителя.
      Тип Records описан так:
         Stroka = String[20];
         Records = Record { Тип лучшие результаты }
            WinnerText: Stroka; { Текст победителя }
            Name: Array [1..10] Of Stroka; { Имена лучших игроков }
            Sc: Array [1..10] Of Word; { Результаты лучших игроков }
         End;
Buf: Text;
   Файловая переменная, используется дла доступа к информационным файлам.
St: String;
   Служебная переменная.
NumFig: ShortInt;
   Определяет число игровых фигур.
i,j: ShortInt;
   Служебные переменные.
Cur: ShortInt;
   Определяет номер текущей фигуры.
Next: ShortInt;
   Определяет номер следующей фигуры.
X, Y: ShortInt;
   Переменные определяют положение левого верхнего угла матрицы текущей фигуры
   в массиве стакана.
CurLines: ShortInt;
   Определяет число линий, удаленных игроком с момента начала нового уровня.
Level: ShortInt;
   Определяет текущий уровень сложности игры.
Fig: Figures;
   Переменная, содержащая информацию об игровых фигурах.
      Тип Figures описан так:
         Mas = Array [1..4] Of String[4]; { Образ фигуры }
         Figure = Record { Тип определяющий 1 игровую фигуру }
            Color: Byte; { Цвет фигуры }
            Image: Mas; { Образ фигуры }
         End;
         Figures = Array [0..Tmp+1] Of Figure; { Тип массива игровых фигур }
      Где Tmp является константой и равна 15.
A: Field;
   Переменная, содержащая информацию о текущем состоянии стакана. (Массив стакана)
      Тип Field описан так:
         Field = Array [-2..MaxX+3,1..MaxY+3] Of Boolean; { Тип массива стакана }
      Где MaxX и MaxY являются константами и равны 12 и 19 соответственно.
GrSuc: Boolean;
   Переменная, указывающая на успешность установки графического режима и подключения
   шрифтов.
EndOfGame: Boolean;
   Переменная, указывающая на завершение текущей игры.
Drop: Boolean;
   Переменная, указывающая на бросок текущей фигуры.
NextFig: Boolean;
   Переменная, указывающая на необходимость появления следующей фигуры.
Exit: Boolean;
   Переменная, указывающая на выход из игры.
Hour, Min, Sec, Sec100: Word;
   Переменные, используемые для снятия показаний с системного таймера.
Score: Word;
   Переменная, указывающая на число заработанных очков.
Lines: Word;
   Переменная, указывающая на число удаленных линий.
TimeStep: Word;
   Переменная, указывающая на текущий шаг времени.
Size: Word;
   Служебная переменная, указывающая на число байтов, необходимых для сохранения
   какой-либо области экрана.
Code: Integer;
   Служебная переменная, указывающая на код ошибки при конвертировании строки
   в число.
M: TMenu;
   Переменная, определяющая текущее состояние меню.
   Примечание:
      TMenu является объектом. Его описание смотри ниже.


                         2.2.2. Описание объектов.

В программе используется объект для работы с меню TMenu. Он описан на языке
Паскаль следующим образом:
   Name = String[21];
   PTL = ^TList;
   TList = Record { Тип элемента меню }
      Title: Name; { заглавие }
      Prev, Next: PTL; { ссылки на соседние элементы }
      Number: Byte; { номер опции }
      X, Y: Integer; { координаты кнопки относительно экрана }
   End;

   TMenu = Object { Объект меню }
      Head, Tail, Cur: PTL; { указатели на "голову", "хвост" и активную опцию }
      N: Byte; { число элементов в меню }
      Constructor INIT_MENU; { Создает пустое меню }
      Destructor DESTROY_MENU; { Уничтожает меню с освобождением памяти }
      Procedure ADD_MENU (NewName: Name; Var Suc: Boolean);
       { Добавляет опцию с именем NewName в меню и присваивает ей следующий по
         счету номер. Результат:  Suc = TRUE - добаление успешно, иначе - нет }
      Function CHOICE_MENU (Vertical: Boolean; XC, YC: Integer;
      NormalFore, NormalBack, SelectedFore, SelectedBack: Word): Byte;
       { Рисует на экране меню и позволяет осуществить выбор опции используя клавиши
         управления курсором и Enter. Возвращаемое число является номером соответст-
         вующего пункта меню. Параметры:
         Vertical = TRUE - Рисуется вертикальное меню, иначе - горизонтальное.
         (XC, YC) - Координаты точки, являющейся центром меню.
         Остальные параметры являются цветами букв в неактивной опции, фона в неактивной
         опции, букв в активной опции и фона в активной опции соответственно. }
   End;

И в его состав вошли следующие методы:

1.  Конструртор INIT_MENU - создает пустое меню.
      Заголовок на языке программирования:
         Constructor TMenu.INIT_MENU;

2.  Деструктор DESTROY_MENU - уничтожает меню с освобождением памяти.
      Заголовок на языке программирования:
         Destructor TMenu.DESTROY_MENU;

3.  Процедура ADD_MENU - добавляет новую опцию в меню.
       Заголовок на языке программирования:
          Procedure TMenu.ADD_MENU (NewName: Name; Var Suc: Boolean);
       Параметры:
          NewName - заголовок новой опции;
          Suc = TRUE - добавление успешно, иначе - нет.

4.  Функция CHOICE_MENU - рисует на экране меню и позволяет осуществить выбор
    опции используя клавиши управления курсором и Enter.
       Заголовок на языке программирования:
          Function TMenu.CHOICE_MENU (Vertical: Boolean; XC, YC: Integer;
             NormalFore, NormalBack, SelectedFore, SelectedBack: Word): Byte;
       Параметры:
          Vertical = TRUE - рисуется вертикальное меню, иначе - горизонтальное;
          XC, YC - Координаты точки, являющейся центром меню;
          NormalFore - цвет букв в неактивной опции;
          NormalBack - цвет фона в неактивной опции;
          SelectedFore - цвет букв в активной опции;
          SelectedBack - цвет фона в активной опции.
       Результат:
          Возвращается число, являющееся номером соответствующего пункта меню.

5.  Процедура SetCoordinates - задает координаты размещения на экране для каждой
    опции меню.
       Заголовок на языке программирования:
          Procedure SetCoordinates;
       Примечание:
          Является вспомогательной процедурой метода TMenu.CHOICE_MENU.

6.  Процедура DrawItem - рисует на экране пункт меню.
       Заголовок на языке программирования:
          Procedure DrawItem (Cur: PTL; IsSelected: Boolean);
       Параметры:
          Cur - указатель на пункт меню, который будет рисоваться;
          IsSelected = TRUE - опция рисуется активной, иначе неактивной.
       Примечание:
          Является вспомогательной процедурой метода TMenu.CHOICE_MENU.

7.  Процедура DrawMenu - рисует на экране меню.
       Заголовок на языке программирования:
          Procedure DrawMenu (Sel: PTL);
       Параметры:
          Sel - указаталь на пункт меню, который будет нарисован активным.
       Примечание:
          Является вспомогательной процедурой метода TMenu.CHOICE_MENU.
