                      2.4 НАЗНАЧЕНИЕ ПРОЦЕДУР И ФУНКЦИЙ.

               2.4.1 Процедуры и функции модуля My_Adds.Pas.

1.  Процедура GAME - основная часть программы.
       Заголовок на языке программирования:
          Procedure GAME;

2.  Функция EDIT_LINE - средство редактирования и ввода строки.
       Заголовок на языке программирования:
          Function EDIT_LINE (X0, Y0, Font, FontSize: Integer; MaxNum: Byte): String;
       Параметры:
          (X0,Y0) - Координата левого верхнего углa строки редактирования;
          Font - Номер шрифта;
          FontSize - Размер шрифта;
          MaxNum - Максимальное число символов в возвращаемой строке.
       Результат:
          Строка символов.

3.  Процедура View - вывод на экран строки редактирования.
       Заголовок на языке программирования:
          Procedure View;
       Примечание:
          Является вспомогательной структурой для функции EDIT_LINE.

4.  Процедура FIRST_PICTURE - рисование заставки, появляющейся при начальной
    загрузке.
       Заголовок на языке программирования:
          Procedure FIRST_PICTURE;

5.  Процедура VGADRIVER - драйвер графического режима.
       Заголовок на языке программирования:
          Procedure VGADRIVER;

6.  Процедура TRIPLEXFONTDRIVER - драйвер шрифта Triplex.
       Заголовок на языке программирования:
          Procedure TRIPLEXFONTDRIVER;

7.  Процедура BOLDRFONTDRIVER - драйвер шрифта Bold.
       Заголовок на языке программирования:
          Procedure BOLDRFONTDRIVER;

8.  Процедура GRAPHICS - установка графического режима и подключение шрифтов.
       Заголовок на языке программирования:
          Procedure GRAPHICS (Var Success: Boolean);
       Параметры:
          Success = TRUE - установка графики и шрифтов успешна, иначе - нет.

9.  Процедура HELP_SCREEN - вывод окна справки с сохранением области экрана
    занятого им.
       Заголовок на языке программирования:
          Procedure HELP_SCREEN;

10. Процедура BEST_RESULTS - вывод на экран таблицы лучших результатов с
    сохранением области экрана занятого ей.
       Заголовок на языке программирования:
          Procedure BEST_RESULTS;

11. Процедура INIT_GAME - прорисовка игрового экрана и установка начальных
    параметров игры.
       Заголовок на языке программирования:
          Procedure INIT_GAME;

12. Процедура PAUSE - прорисовка сообщения о паузе на экране с сохранением
    области экрана занятого им.
       Заголовок на языке программирования:
          Procedure PAUSE;

13. Процедура ESCAPE - отображение меню выхода из текущей игры с формированием
    значения глобальной переменной EndOfGame.
       Заголовок на языке программирования:
          Procedure ESCAPE;

14. Процедура QUIT - отображение меню окончательного выхода из игры с формиро-
    ванием значения глобальной переменной Exit.
       Заголовок на языке программирования:
          Procedure QUIT;

15. Процедура KEY - задержки до нажатия клаваши. Буфер клавиатуры полностью
    очищается.
       Заголовок на языке программирования:
          Procedure KEY;

16. Процедура ACTIONS_WITH_FIGURЕ - описывает все действия с фигурой: от мо-
    мента появления ее и до момента ее фиксации в стакане. Осуществляет контроль
    за нажатием на клавиши вывода справки и т.д.
       Заголовок на языке программирования:
          Procedure ACTIONS_WITH_FIGURE;

17. Процедура ROTATE - поворот матрицы фигуры.
       Заголовок на языке программирования:
          Procedure ROTATE;

18. Процедура CUT - "Вырезает" матрицу текущей фигуры из массива стакана.
       Заголовок на языке программирования:
          Procedure CUT;

19. Процедура PASTE - "вставляет" матрицу текущей фигуры в массив стакана.
      Заголовок на языке программирования:
         Procedure PASTE;

20. Функция CANPUT - проверяет можно ли поместить образ фигуры в массив
    стакана без наложения на другие фигуры и без выхода за границы стакана.
       Заголовок на языке программирования:
          Function CANPUT (F: Mas; X, Y:ShortInt): Boolean;
       Параметры:
          F - Образ фигуры;
          X, Y - Координаты положения в стакане.
       Результат:
          TRUE - можно  /  FALSE - нельзя.

21. Процедура PUT_FUGURE - вставляет образ текущей фигуры в массив стакана
    и рисует ее на экране.
       Заголовок на языке программирования:
          Procedure PUT_FIGURE;

22. Процедура REMOVE_FIGURE - удаляет образ текущей фигуры из массива стакана
    и с экрана.
       Заголовок на языке программирования:
          Procedure REMOVE_FIGURE;

23. Функция HIGH_TIME - проверяет не пора ли сдвинуть фигуру на одну позицию вниз.
       Заголовок на языке программирования:
          Function HIGH_TIME: Boolean;
       Результат:
          TRUE - пора  /  FALSE - нет.

24. Процедура ANALYSE - анализирует заполнились ли какие-либо горизонтальные ряды
    в массиве стакана, если да, то убирает их по правилам Tetris'а и увеличивает
    очки, число линий и, может быть, уровень сложности.
       Заголовок на языке программирования:
          Procedure ANALYSE;

25. Процедура UpdateIt - отображает на экране информацию о набранных очках, линиях
    и уровне.
       Заголовок на языке программирования:
          Procedure UpdateIt;
       Примечание:
          Является вспомогательной процедурой для ANALYSE.

26. Процедура SHOW_NEXT - случайным образом генерирует номер следующей фигуры и
    отображает ее в соответствующем окне просмотра.
       Заголовок на языке программирования:
          Procedure SHOW_NEXT;

27. Процедура UPDATE_RESULTS - заносит данные об игроке в таблицу лучших
    результатов, если игрок показал хороший результат.
       Заголовок на языке программирования:
          Procedure UPDATE_RESULTS;

28. Функция Good_Result - осуществляет ввод имени игрока.
       Заголовок на языке программирования:
          Function Good_Result: Stroka;
       Примечание:
         Является вспомогательной структурой для процедуры UPDATE_RESULTS.

29. Функция First_Place - осуществляет ввод текста победителя.
       Заголовок на языке программирования:
          Function First_Place: Stroka;
       Примечание:
          Является вспомогательной структурой для процедуры UPDATE_RESULTS.

               2.4.2 Процедуры и функции модуля Files.Pas.

30. Процедура PREPARE - чтение информации из файлов данных.
       Заголовок на языке программирования:
          Procedure PREPARE;

31. Процедура READ_RESULTS - читает таблицу лучших результатов из файла.
       Заголовок на языке программирования:
          Procedure READ_RESULTS;

32. Процедура SAVE_RESULTS - сохраняет таблицу лучших результатов в файле.
       Заголовок на языке программирования:
          Procedure SAVE_RESULTS;
